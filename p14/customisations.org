# p14 -*- mode: org -*-
#+TODO: TODO(t) STARTED(s) WAITING(w) | DONE(d) CANCELLED(c)
#+STARTUP: overview logdone

* debian trixie

We install debian trixie, stable.

#+BEGIN_example
gargle@p14:~/pandora$ cat /etc/debian_version
13.1
#+END_example

#+BEGIN_example
root@p14:~# cat /etc/apt/sources.list
#deb cdrom:[Debian GNU/Linux 13.1.0 _Trixie_ - Official amd64 NETINST with firmware 20250906-10:22]/ trixie contrib main non-free-firmware

deb http://ftp.be.debian.org/debian/ trixie main non-free-firmware
deb-src http://ftp.be.debian.org/debian/ trixie main non-free-firmware

deb http://security.debian.org/debian-security trixie-security main non-free-firmware
deb-src http://security.debian.org/debian-security trixie-security main non-free-firmware

# trixie-updates, to get updates before a point release is made;
# see https://www.debian.org/doc/manuals/debian-reference/ch02.en.html#_updates_and_backports
deb http://ftp.be.debian.org/debian/ trixie-updates main non-free-firmware
deb-src http://ftp.be.debian.org/debian/ trixie-updates main non-free-firmware

# This system was installed using removable media other than
# CD/DVD/BD (e.g. USB stick, SD card, ISO image file).
# The matching "deb cdrom" entries were disabled at the end
# of the installation process.
# For information about how to configure apt package sources,
# see the sources.list(5) manual.
#+END_example

* issues

** mayor

Sometimes X wouldn't start.  Turns out, the amdgpu module needs to load early, earlier than kms.

First we suspected networking, then xdm, then systemd-networkd-wait-online.sservice, but we all
keep those at the defaults.

* apt

We need listbugs to know about issues before we install them.

#+BEGIN_example
gargle@p14:~$ sudo apt install apt-listbugs
#+END_example

* partitions

We start with only /boot/efi, /boot, and an encrypted lvm with / and /home.  Swap we define by
means of zam.

#+BEGIN_example
gargle@p14:~$ lsblk
NAME                   MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
zram0                  253:0    0   6.8G  0 disk  [SWAP]
nvme0n1                259:0    0 476.9G  0 disk
├─nvme0n1p1            259:1    0   976M  0 part  /boot/efi
├─nvme0n1p2            259:2    0   977M  0 part  /boot
└─nvme0n1p3            259:3    0   475G  0 part
  └─nvme0n1p3_crypt    254:0    0   475G  0 crypt
    ├─p14--vg-lv--root 254:1    0  59.6G  0 lvm   /
    └─p14--vg-lv--home 254:2    0 415.4G  0 lvm   /home
#+END_example

* f1-f12 function keys

We tell the bios that f1-f12 are accessible without fnlock.

* networking

** lo and enp1s0f0

#+BEGIN_example
gargle@p14:~$ ls -haltr /etc/network/interfaces
-rw-r--r-- 1 root root 322 Oct  2 19:19 /etc/network/interfaces
#+END_example

#+BEGIN_example
gargle@p14:~$ ls -haltr /etc/network/interfaces.d
total 8.0K
drwxr-xr-x 2 root root 4.0K Sep 17  2024 .
drwxr-xr-x 7 root root 4.0K Oct 17 13:09 ..
#+END_example

#+BEGIN_example
gargle@p14:~$ cat /etc/network/interfaces
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

source /etc/network/interfaces.d/*

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
allow-hotplug enp1s0f0
iface enp1s0f0 inet dhcp
#+END_example

** wlp2s0

*** wpa_supplicant

#+BEGIN_example
gargle@p14:~$ head -n 5 /etc/wpa_supplicant/wpa_supplicant-wlp2s0.conf
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
        ssid="gargle"
        ...
#+END_example

*** scan for access points

#+BEGIN_example
gargle@p14:~$ sudo iwlist wlp2s0 scan | grep ESSID
#+END_example

*** generate an entry for a new wifi access point

Add the following output to /etc/wpa_supplicant/wpa_supplicant-wlp2s0.conf.

For a regular access point with a passphrase:

#+BEGIN_example
gargle@p14:~$ wpa_passphrase name passphrase
network={
        ssid="name"
        #psk="passphrase"
        psk=03ce7bcb3c54136492ed38abce13dd50341d46392c4d0f71f44c4f418d286dc8
}
#+END_example

For an access point without a passphrase:

#+BEGIN_example
network={
  ssid="name"
  key_mgmt=NONE
}
#+END_example

*** systemd

#+BEGIN_example
gargle@p14:~$ cat /etc/systemd/network/wlp2s0.network
[Match]
Name=wlp2s0

[Network]
DHCP=yes
#+END_example

#+BEGIN_example
root@p14:~# systemctl enable --now wpa_supplicant@wlp2s0.service
#+END_example

#+BEGIN_example
gargle@p14:~$ systemctl status wpa_supplicant@wlp2s0.service
● wpa_supplicant@wlp2s0.service - WPA supplicant daemon (interface-specific version)
     Loaded: loaded (/usr/lib/systemd/system/wpa_supplicant@.service; enabled; preset: enabled)
     Active: active (running) since Thu 2025-10-02 16:28:46 CEST; 7min ago
 Invocation: 1a36631e117c462d85391b52f25741a6
   Main PID: 1466 (wpa_supplicant)
      Tasks: 1 (limit: 33020)
     Memory: 9.5M (peak: 9.7M)
        CPU: 28ms
     CGroup: /system.slice/system-wpa_supplicant.slice/wpa_supplicant@wlp2s0.service
             └─1466 /usr/sbin/wpa_supplicant -c/etc/wpa_supplicant/wpa_supplicant-wlp2s0.conf -iwlp2s0
#+END_example

#+BEGIN_example
gargle@p14:~$ sudo wpa_cli status
Selected interface 'wlp2s0'
bssid=84:16:f9:59:66:5f
freq=5180
ssid=gargle
id=0
mode=station
wifi_generation=5
pairwise_cipher=CCMP
group_cipher=CCMP
key_mgmt=WPA2-PSK
wpa_state=COMPLETED
ip_address=192.168.1.122
p2p_device_address=12:e1:8e:84:b0:d2
address=10:e1:8e:84:b0:d2
uuid=ad074921-c6c5-5b79-a778-af489e4ba534
ieee80211ac=1
#+END_example

#+BEGIN_example
gargle@p14:~$ sudo wpa_cli reconfigure
Selected interface 'wlp2s0'
OK
#+END_example

** dhclient

How to figure out the dns name servers that were returned by dhclient, if you ever wonder why our
default cloudfare dns servers aren't used when connecting to a new access point without a
passphrase.

#+BEGIN_example
gargle@p14:~/banking$ cat /var/lib/dhcp/dhclient.leases | egrep "fixed-address|option domain-name-servers"
  fixed-address 192.168.1.191;
  option domain-name-servers 192.168.1.1;
  fixed-address 192.168.128.49;
  option domain-name-servers 192.168.128.1;
  fixed-address 192.168.128.49;
  option domain-name-servers 192.168.128.1;
#+END_example

** dnsmasq

We use the cloudfare dns servers instead of our own, but we want to fall back on our own router at
home to resolve msi.lan, openwrt.lan, and any other device on our local lan.

#+BEGIN_example
gargle@p14:~$ sudo apt install dnsmasq
#+END_example

https://datatracker.ietf.org/doc/html/rfc6762#appendix-G mentions /lan/.

#+BEGIN_example
gargle@p14:~/pandora$ cat /etc/dnsmasq.d/lan.conf
# forward lan queries to 192.168.1.1
server=/lan/192.168.1.1

# Use a separate resolv file
resolv-file=/etc/dnsmasq-resolv.conf

#log-queries
#log-facility=/var/log/dnsmasq.log
#+END_example

Our new /etc/dnsmasq-resolv.conf.

#+BEGIN_example
gargle@p14:~/pandora$ cat /etc/dnsmasq-resolv.conf
# cloudfare dns servers
nameserver 1.1.1.1
nameserver 1.0.0.1
nameserver 2606:4700:4700::1111
nameserver 2606:4700:4700::1001
#+END_example

We write protect /etc/dnsmasq-resolv.conf.

#+BEGIN_example
gargle@p14:~/pandora$ sudo chattr +i /etc/dnsmasq-resolv.conf
#+END_example

#+BEGIN_example
gargle@p14:~/pandora$ ls -haltr /etc/dnsmasq-resolv.conf
-rw-r--r-- 1 root root 126 Oct  4 20:42 /etc/dnsmasq-resolv.conf
#+END_example

Our /etc/resolv.conf points to localhost, because of dnsmask, and because of librewolf.

#+BEGIN_example
gargle@p14:~/pandora$ cat /etc/resolv.conf
nameserver 127.0.0.1
#+END_example

#+BEGIN_example
gargle@p14:~/pandora$ sudo chattr +i /etc/resolv.conf
#+END_example

#+BEGIN_example
gargle@p14:~/pandora$ ls -haltr /etc/resolv.conf
-rw-r--r-- 1 root root 21 Oct  7 08:54 /etc/resolv.conf
#+END_example

This here is the previous version, autogenerated during the install of trixie:

#+BEGIN_example
gargle@p14:~/pandora$ cat /etc/resolv.conf.old
domain lan
search lan
nameserver 192.168.1.1
#+END_example

Enable dnsmask.service, if necessary.

#+BEGIN_example
root@p14:~# systemctl enable --now dnsmask.service
#+END_example

* firewall

We go with the defaults, just make sure IPV6=yes is on.

#+BEGIN_example
root@p14:~# ufw status verbose
Status: active
Logging: on (low)
Default: deny (incoming), allow (outgoing), disabled (routed)
New profiles: skip
#+END_example

#+BEGIN_example
root@p14:~# systemctl status ufw.service
● ufw.service - Uncomplicated firewall
     Loaded: loaded (/usr/lib/systemd/system/ufw.service; enabled; preset: enabled)
     Active: active (exited) since Thu 2025-10-02 16:28:46 CEST; 20min ago
 Invocation: 5f3018ac923f443487d52e9a509d0339
       Docs: man:ufw(8)
   Main PID: 1223 (code=exited, status=0/SUCCESS)
   Mem peak: 3.7M
        CPU: 60ms

Oct 02 16:28:46 p14 systemd[1]: Starting ufw.service - Uncomplicated firewall...
Oct 02 16:28:46 p14 systemd[1]: Finished ufw.service - Uncomplicated firewall.
#+END_example

#+BEGIN_example
root@p14:~# cat /etc/default/ufw
# /etc/default/ufw
#

# Set to yes to apply rules to support IPv6 (no means only IPv6 on loopback
# accepted). You will need to 'disable' and then 'enable' the firewall for
# the changes to take affect.
IPV6=yes

# Set the default input policy to ACCEPT, DROP, or REJECT. Please note that if
# you change this you will most likely want to adjust your rules.
DEFAULT_INPUT_POLICY="DROP"

# Set the default output policy to ACCEPT, DROP, or REJECT. Please note that if
# you change this you will most likely want to adjust your rules.
DEFAULT_OUTPUT_POLICY="ACCEPT"

# Set the default forward policy to ACCEPT, DROP or REJECT.  Please note that
# if you change this you will most likely want to adjust your rules
DEFAULT_FORWARD_POLICY="DROP"

# Set the default application policy to ACCEPT, DROP, REJECT or SKIP. Please
# note that setting this to ACCEPT may be a security risk. See 'man ufw' for
# details
DEFAULT_APPLICATION_POLICY="SKIP"

# By default, ufw only touches its own chains. Set this to 'yes' to have ufw
# manage the built-in chains too. Warning: setting this to 'yes' will break
# non-ufw managed firewall rules
MANAGE_BUILTINS=no

#
# IPT backend
#
# only enable if using iptables backend
IPT_SYSCTL=/etc/ufw/sysctl.conf

# Extra connection tracking modules to load. IPT_MODULES should typically be
# empty for new installations and modules added only as needed. See
# 'CONNECTION HELPERS' from 'man ufw-framework' for details. Complete list can
# be found in net/netfilter/Kconfig of your kernel source. Some common modules:
# nf_conntrack_irc, nf_nat_irc: DCC (Direct Client to Client) support
# nf_conntrack_netbios_ns: NetBIOS (samba) client support
# nf_conntrack_pptp, nf_nat_pptp: PPTP over stateful firewall/NAT
# nf_conntrack_ftp, nf_nat_ftp: active FTP support
# nf_conntrack_tftp, nf_nat_tftp: TFTP support (server side)
# nf_conntrack_sane: sane support
IPT_MODULES=""
#+END_example

#+BEGIN_example
root@p14:~# ufw status verbose
Status: active
Logging: on (low)
Default: deny (incoming), allow (outgoing), disabled (routed)
New profiles: skip
#+END_example

* swap

We install zram, use 25% of RAM max and use PRIORITY=100.

#+BEGIN_example
gargle@p14:~$ sudo apt install zram-tools
#+END_example

#+BEGIN_example
gargle@p14:~$ cat /etc/default/zramswap
# Compression algorithm selection
# speed: lz4 > zstd
# compression: zstd > lz4
# This is not inclusive of all that is available in latest kernels
# See /sys/block/zram0/comp_algorithm (when zram module is loaded) to see
# what is currently set and available for your kernel[1]
# [1]  https://www.kernel.org/doc/html/latest/admin-guide/blockdev/zram.html#select-compression-algorithm
ALGO=lz4

# Specifies the amount of RAM that should be used for zram
# based on a percentage the total amount of available memory
# This takes precedence and overrides SIZE below
PERCENT=25

# Specifies a static amount of RAM that should be used for
# the ZRAM devices, this is in MiB
SIZE=512

# Specifies the priority for the swap devices, see swapon(2)
# for more details. Higher number = higher priority
# This should probably be higher than hdd/ssd swaps.
PRIORITY=100
#+END_example

* keyboard

#+BEGIN_example
root@p14:~# cat /etc/default/keyboard
# KEYBOARD CONFIGURATION FILE

# Consult the keyboard(5) manual page.

XKBMODEL="pc105"
XKBLAYOUT="us"
XKBVARIANT="altgr-weur"
#XKBOPTIONS="compose:lwin,ctrl:nocaps"
XKBOPTIONS="compose:lctrl,ctrl:nocaps"

BACKSPACE="guess"
#+END_example

#+BEGIN_example
gargle@p14:~$ sudo dpkg-reconfigure keyboard-configuration
gargle@p14:~$ sudo systemctl restart keyboard-setup.service
#+END_example

#+BEGIN_example
root@p14:~# setupcon
root@p14:~# update-initramfs -u
#+END_example

Beware, sway needs its own keyboard configuration, see the entry under [[global settings for the
keyboard]].

* editor

We go for vim.basic instead of nano

#+BEGIN_EXAMPLE
gargle@p14:~$ sudo update-alternatives --config editor
#+END_EXAMPLE

#+BEGIN_EXAMPLE
gargle@p14:~$ sudo apt remove nano --purge
#+END_EXAMPLE

* sound

#+BEGIN_example
gargle@p14:~$ sudo apt install wireplumber pipewire pipewire-pulse libspa-0.2-bluetooth ffmpeg
#+END_example

libspa-0.2-bluetooth wasn't installed by default.

ffmpeg is needed because facebook and instagram videos and reels didn't start, to ensure that we have
the necessary video codecs installed, such as H.264.

* amdgpu module

#+BEGIN_example
root@p14:~# cat /etc/modules-load.d/amdgpu.conf
# ensure the amdgpu module loads early, or X won't start
amdgpu
#+END_example

* sway

** apt

#+BEGIN_example
gargle@p14:~/pandora$ sudo apt install sway sway-backgrounds swaylock swayidle waybar wmenu
#+END_example

** global settings for the background

#+BEGIN_example
output eDP-1 bg /usr/share/backgrounds/Don-Quixote\ 1920x1200.jpg fill
output DP-7 bg /usr/share/backgrounds/Don-Quixote\ 1920x1080.jpg fill
#+END_example

** global settings for the keyboard

#+BEGIN_example
gargle@p14:~$ cat /etc/sway/config.d/keyboard.conf
input * {
  xkb_layout "us"
  xkb_variant "altgr-weur"
  xkb_options "compose:lctrl,ctrl:nocaps"
}

input <identifier> xkb_model "pc105"
#+END_example

** gloabl settings for kanshi

#+BEGIN_example
gargle@p14:~$ cat /etc/sway/config.d/kanshi.conf
exec --no-startup-id kanshi
#+END_example

** individual kanshi configuration

#+BEGIN_example
gargle@p14:~$ cat .config/kanshi/config
profile docked {
    output eDP-1 mode 1920x1200 position 0,0 scale 1 enable
    output DP-7 mode 1920x1080 position 1920,0 scale 1 enable
    # optional: ensure workspace assignment after profile applied
    exec swaymsg 'workspace 1; move workspace to eDP-1'
}

profile undocked {
    output eDP-1 mode 1920x1200 position 0,0 scale 1 enable
    output DP-7 disable
}
#+END_example

** individual configuration, mainly bindsym, waybar, and floating_example

We put the idle definition here and do not make it global because greetd has no login shell and no
password.

#+BEGIN_example
gargle@p14:~$ diff .config/sway/config /etc/sway/config
12,15c12,15
< set $left left
< set $down down
< set $up up
< set $right right
---
> set $left h
> set $down j
> set $up k
> set $right l
49,54d48
< exec swayidle -w \
<     timeout 300 'swaylock -f -i eDP-1:/usr/share/backgrounds/Don-Quixote\ 1920x1200.jpg \
<                              -i DP-7:/usr/share/backgrounds/Don-Quixote\ 1920x1080.jpg' \
<     timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
<     before-sleep 'swaylock -f -i eDP-1:/usr/share/backgrounds/Don-Quixote\ 1920x1200.jpg \
<                               -i DP-7:/usr/share/backgrounds/Don-Quixote\ 1920x1080.jpg'
103,105c97,101
<     # with Alt+Tab
<     bindsym Alt+Tab focus next
<     bindsym Shift+Alt+Tab focus prev
---
>     # Or use $mod+[up|down|left|right]
>     bindsym $mod+Left focus left
>     bindsym $mod+Down focus down
>     bindsym $mod+Up focus up
>     bindsym $mod+Right focus right
111a108,112
>     # Ditto, with arrow keys
>     bindsym $mod+Shift+Left move left
>     bindsym $mod+Shift+Down move down
>     bindsym $mod+Shift+Up move up
>     bindsym $mod+Shift+Right move right
139,140d139
<     bindsym $mod+Ctrl+1 move workspace to output eDP-1
<     bindsym $mod+Ctrl+2 move workspace to output DP-7
190a190,195
>     # Ditto, with arrow keys
>     bindsym Left resize shrink width 10px
>     bindsym Down resize grow height 10px
>     bindsym Up resize shrink height 10px
>     bindsym Right resize grow width 10px
>
209,216d213
<     # Special keys to take a screenshot with grimshot
<     bindsym $mod+Print exec grimshot save output
<     bindsym $mod+Shift+Print exec grimshot save area
<     bindsym $mod+Mod1+Print exec grimshot save active
<     bindsym $mod+Ctrl+Print exec grimshot save window
<     # lock the screen
<     bindsym $mod+l exec swaylock -f -i eDP-1:/usr/share/backgrounds/Don-Quixote\ 1920x1200.jpg \
<                                     -i DP-7:/usr/share/backgrounds/Don-Quixote\ 1920x1080.jpg
223c220,230
<     swaybar_command waybar
---
>     position top
>
>     # When the status_command prints a new line to stdout, swaybar updates.
>     # The default just shows the current date and time.
>     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
>
>     colors {
>         statusline #ffffff
>         background #323232
>         inactive_workspace #32323200 #32323200 #5c5c5c
>     }
227d233
< for_window [app_id="librewolf"] floating enable
#+END_example

* greetd

#+BEGIN_example
gargle@p14:~/pandora$ sudo apt install greetd wlgreet
#+END_example

We do not start agreety but wlgreet by means of sway.

#+BEGIN_example
gargle@p14:~/pandora$ cat /etc/greetd/config.toml
[terminal]
# The VT to run the greeter on. Can be "next", "current" or a number
# designating the VT.
vt = 7

# The default session, also known as the greeter.
[default_session]

# `agreety` is the bundled agetty/login-lookalike. You can replace `/bin/sh`
# with whatever you want started, such as `sway`.
#command = "/usr/sbin/agreety --cmd '${SHELL:-/bin/sh}'"
# if using wlgreet
command = "sway --config /etc/greetd/sway-config"

# The user to run the command as. The privileges this user must have depends
# on the greeter. A graphical greeter may for example require the user to be
# in the `video` group.
user = "_greetd"
#+END_example

We limit wlgreet to eDP-1 by switching of DP-7.

#+BEGIN_example
gargle@p14:~$ cat /etc/greetd/sway-config.d/noDP-7.conf
output DP-7 disable
#+END_example

* waybar

We only show our wifi, our battery, and the year and date.

#+BEGIN_example
gargle@p14:~/pandora$ diff ~/.config/waybar/config.jsonc /etc/xdg/waybar/config.jsonc
11,13c11,13
<     //     "sway/mode",
<         "sway/scratchpad"
<     //     "custom/media"
---
>         "sway/mode",
>         "sway/scratchpad",
>         "custom/media"
19,20c19,20
<      //    "mpd",
<      //    "idle_inhibitor",
---
>         "mpd",
>         "idle_inhibitor",
23,29c23,29
<      //    "power-profiles-daemon",
<      //    "cpu",
<      //    "memory",
<      //    "temperature",
<      //    "backlight",
<      //    "keyboard-state",
<      //    "sway/language",
---
>         "power-profiles-daemon",
>         "cpu",
>         "memory",
>         "temperature",
>         "backlight",
>         "keyboard-state",
>         "sway/language",
31,34c31,34
<      //    "battery#bat2",
<         "clock"
<      //    "tray",
<      //    "custom/power"
---
>         "battery#bat2",
>         "clock",
>         "tray",
>         "custom/power"
112,113c112
<         // "format-alt": "{:%Y-%m-%d}"
<         "format": "{:%Y-%m-%d %H:%M}"
---
>         "format-alt": "{:%Y-%m-%d}"
#+END_example

We keep the same stylesheet.

#+BEGIN_example
gargle@p14:~/pandora$ diff ~/.config/waybar/style.css /etc/xdg/waybar/style.css
#+END_example

* pcspkr

We disable the pcspeaker to get rid of the annoying BEEP in xterm and console.

#+BEGIN_example
root@p14:~# cat /etc/modprobe.d/pcspkr.conf
blacklist pcspkr
#+END_example

* /usr/local/bin/custom-startup.sh

A script to set up our local choosings for our led and for our battery.

#+BEGIN_example
root@p14:~# cat /etc/systemd/system/custom-startup.service
[Unit]
Description=Custom startup settings (mic mute LED)
After=local-fs.target
Wants=multi-user.target

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/local/bin/custom-startup.sh
TimeoutStartSec=10

[Install]
WantedBy=multi-user.target
#+END_example

#+BEGIN_example
gargle@p14:~/pandora$ cat /usr/local/bin/custom-startup.sh
#!/bin/sh

# set the battery
echo 80 > /sys/class/power_supply/BAT0/charge_control_end_threshold
echo 60 > /sys/class/power_supply/BAT0/charge_control_start_threshold

# turn mic mute LED off
echo 0 > /sys/class/leds/platform::micmute/brightness 2>/dev/null || true
#+END_example

#+BEGIN_example
root@p14:~# systemctl enable --now custom-startup.service
#+END_example

* led

We switch of the annoying led on F4 (mic mute LED), see /usr/local/bin/custom-startup.sh here above.

* battery

Note that we show the battery in the waybar.  We set the start and end charging thresholds in
/usr/local/bin/custom-startup.sh as discussed here above.

** cat /sys/class/power_supply/BAT0/status

#+BEGIN_example
gargle@p14:~$ cat /sys/class/power_supply/BAT0/status
Discharging
gargle@p14:~$ cat /sys/class/power_supply/BAT0/capacity
59
#+END_example

** show start charging and stopping charging behaviour

#+BEGIN_EXAMPLE
gargle@p14:~/pandora/p14$ cat /sys/class/power_supply/BAT0/charge_control_start_threshold
60
gargle@p14:~/pandora/p14$ cat /sys/class/power_supply/BAT0/charge_control_end_threshold
80
#+END_EXAMPLE

* temperature

Check the temperature.  This below means 42 degrees.

#+BEGIN_example
gargle@p14:~/banking$ cat /sys/class/thermal/thermal_zone0/temp
42000
#+END_example

* brightness

Control the brightness of the screen.

#+BEGIN_example
gargle@p14:~/banking$ cat /sys/class/backlight/amdgpu_bl0/brightness
24
#+END_example

#+BEGIN_example
gargle@p14:~/banking$ cat /sys/class/backlight/amdgpu_bl0/max_brightness
255
#+END_example

#+BEGIN_example
gargle@p14:~/pandora$ echo 24 | sudo tee /sys/class/backlight/amdgpu_bl0/brightness
24
#+END_example

* cal

cal makes part of bsdmainutils.

#+BEGIN_example
gargle@p14:~/pandora$ sudo apt install bsdmainutils
#+END_example

* tmux

** configuration

#+BEGIN_example
gargle@p14:~$ cat .tmux.conf
unbind C-b
set-option -g prefix C-j
bind-key C-j send-prefix
#+END_example

** change foreground, background colours

C-j : select-pane -t:.1 -P 'fg=white,bg=black'

* foot

#+BEGIN_example
gargle@p14:~$ cat .config/foot/foot.ini
font=DejaVu Sans Mono:pixelsize=15

[colors]
background=ffffff
foreground=000000
#+END_example

* emacs

I moved the .emacs file to pandora/p14.

#+BEGIN_example
gargle@p14:~$ sudo apt install emacs-pgtk
#+END_example

We set the line length to 102.

#+BEGIN_example
;; Set line width to 102 columns...
(setq-default fill-column 102)
#+END_example

* TODO en_GB.UTF-8

* TODO backports
https://ostechnix.com/enable-backports-testing-repositories-debian-13-trixie/
